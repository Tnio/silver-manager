<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silverfox.finance.orm.ProductContractDao">
	<resultMap id="BaseResultMap" type="ProductContract">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="TINYINT" />
	</resultMap>
	<resultMap id="LeftResultMap" type="ProductContract">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<collection property="attachments" ofType="Attachment">
			<id column="attachment_id" property="id" jdbcType="INTEGER" />
			<result column="category" property="category" jdbcType="VARCHAR" />
			<result column="url" property="url" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	<sql id="columns">
		pc.id, name, status
	</sql>
	<select id="selectById" resultMap="LeftResultMap" parameterType="java.lang.Integer">
		select
		<include refid="columns" />
		, pt.id attachment_id, category, url
		from product_contract pc left join
		attachment pt on pc.id = pt.contract_id
		where pc.id =
		#{id,jdbcType=INTEGER}
	</select>

	<select id="queryForCount" resultType="int">
		select count(id) from product_contract
		<where>
			<if test="name != null">
				name like '%${name}%'
			</if>
			<if test="status >= 0">
				and status = #{status}
			</if>
		</where>
	</select>

	<select id="queryForList" resultMap="BaseResultMap">
		select
		<include refid="columns" />
		from product_contract pc
		<where>
			<if test="name != null">
				name like '%${name}%'
			</if>
			<if test="status >= 0">
				and status = #{status}
			</if>
		</where>
		ORDER BY id desc
		<choose>
			<when test="offset > 0 and size > 0">
        <![CDATA[
          limit #{offset}, #{size}
        ]]>
			</when>
			<when test="size > 0">
        <![CDATA[
          limit 0, #{size}
        ]]>
			</when>
			<otherwise>
	    <![CDATA[
	      limit 0, 15
	    ]]>
			</otherwise>
		</choose>
	</select>

	<update id="update" parameterType="ProductContract">
		update product_contract
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="status >= 0">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<insert id="insert" parameterType="ProductContract"
		useGeneratedKeys="true" keyProperty="id">
		insert into product_contract
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="status >= 0">
				status
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="status >= 0">
				#{status,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<select id="duplicate" resultType="int">
    	select count(id) from product_contract 
    	<where>
      		<if test="name != null">
      			name = #{name,jdbcType=VARCHAR}
      		</if>
      		<if test="id > 0">
       		 and id != #{id,jdbcType=INTEGER}
      		</if>
    	</where>
  	</select>

</mapper>