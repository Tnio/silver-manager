<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silverfox.finance.orm.PayBankDao" >
    <resultMap id="ResultMap" type="PayBank" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
        <result column="bank_no" property="bankNO" jdbcType="VARCHAR" />
        <result column="logo_url" property="logoUrl" jdbcType="VARCHAR" />
        <result column="single_limit" property="singleLimit" jdbcType="INTEGER" />
        <result column="day_limit" property="dayLimit" jdbcType="INTEGER" />
        <result column="month_limit" property="monthLimit" jdbcType="INTEGER" />
        <result column="pay_channel" property="payChannel" jdbcType="INTEGER" />
        <result column="enable" property="enable" jdbcType="INTEGER" />
        <result column="sort_number" property="sortNumber" jdbcType="INTEGER" />
    </resultMap>
    <sql id="columns" >
        id, bank_no, bank_name, sort_number, logo_url, single_limit, day_limit, month_limit, pay_channel, enable
    </sql>
    <select id="selectByBankNO" resultMap="ResultMap">
        select <include refid="columns" /> from pay_bank
        where bank_no = #{bankNO, jdbcType=VARCHAR} and pay_channel = #{payChannel, jdbcType=INTEGER} limit 1
    </select>
    <select id="queryForListByBankNO" resultMap="ResultMap">
        select <include refid="columns" />
        from pay_bank
        where pay_channel = #{payChannel, jdbcType=INTEGER} and bank_no in
        <foreach item="bankNO" index="index" collection="bankNOs" open="(" separator="," close=")">
            #{bankNO}
        </foreach>
    </select>
    <select id="selectBank" resultMap="ResultMap">
        select
        <include refid="columns" />
        from pay_bank
        <where>
            <if test="payChannel > -1">
                pay_channel = #{payChannel,jdbcType=INTEGER}
            </if>
            <if test="enable > -1">
                <if test="enable == 1">
                    and enable >= 1
                </if>
                <if test="enable != 1">
                    and enable = #{enable,jdbcType=INTEGER}
                </if>
            </if>
        </where>
        order by sort_number
    </select>
    <select id="selectById" parameterType="java.lang.Integer" resultType="PayBank">
        select id, bank_no bankNO, bank_name bankName, sort_number sortNumber, logo_url logoUrl, single_limit singleLimit, day_limit dayLimit, month_limit monthLimit, enable
        from pay_bank where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="duplicate" resultType="int">
        select count(id) from pay_bank
        <where>
            <if test="name != null">
                bank_name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="id > 0">
                and id != #{id,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <insert id="insert" parameterType="PayBank" >
        insert into pay_bank
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bankNO != null">
                bank_no,
            </if>
            <if test="bankName != null">
                bank_name,
            </if>
            enable
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bankNO != null">
                #{bankNO,jdbcType=VARCHAR},
            </if>
            <if test="bankName != null">
                #{bankName,jdbcType=VARCHAR},
            </if>
            0
        </trim>
    </insert>
    <update id="update" parameterType="PayBank">
        update pay_bank
        <set>
            <if test="bankNO != null">
                bank_no = #{bankNO,jdbcType=VARCHAR},
            </if>
            <if test="logoUrl != null">
                logo_url = #{logoUrl,jdbcType=VARCHAR},
            </if>
            <if test="bankName != null">
                bank_name = #{bankName,jdbcType=VARCHAR},
            </if>
            <if test="singleLimit > 0">
                single_limit = #{singleLimit,jdbcType=INTEGER},
            </if>
            <if test="dayLimit > 0">
                day_limit = #{dayLimit,jdbcType=INTEGER},
            </if>
            <if test="monthLimit > 0">
                month_limit = #{monthLimit,jdbcType=INTEGER},
            </if>
            <if test="enable > 0">
                enable = #{enable,jdbcType=INTEGER},
            </if>
            <if test="sortNumber > 0">
                sort_number = #{sortNumber,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="enable">
        update pay_bank set enable = #{value,jdbcType=INTEGER} where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateBatch" parameterType="PayBank" >
        <foreach collection="banks" item="payBank" index="index" separator=";">
            update pay_bank
            <set>
                single_limit = #{payBank.singleLimit},
                day_limit = #{payBank.dayLimit},
                month_limit = #{payBank.monthLimit},
                enable = #{payBank.enable}
            </set>
            where bank_no = #{payBank.bankNO}
        </foreach>
    </update>
</mapper>