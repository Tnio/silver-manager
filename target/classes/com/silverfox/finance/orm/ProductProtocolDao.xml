<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silverfox.finance.orm.ProductProtocolDao" >
  <resultMap id="BaseResultMap" type="ProductProtocol" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="TINYINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="columns" >
    id, name, category, content, status
  </sql>
  <select id="queryForList" resultMap="BaseResultMap">
    select 
    <include refid="columns" />
    from product_protocol pc 
    <where>
      <if test="status >= 0">
        status = #{status,jdbcType=INTEGER}
      </if>
    </where>
    ORDER BY id desc
  </select>
  <select id="queryForCount" resultType="int">
  	select count(id) from product_protocol
  	<where>
      <if test="status >= 0">
        status = #{status,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectSignatureProtocolByProductId" resultType="ProductProtocol">
   	select id, name, category, content, status
	from product_protocol 
	where category = 3 and FIND_IN_SET(id,(SELECT protocol_ids from product_detail where id = #{productId, jdbcType=INTEGER})) 
  </select>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select <include refid="columns" /> from product_protocol where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByIds" resultMap="BaseResultMap" >
    select <include refid="columns" /> from product_protocol where FIND_IN_SET(id,#{protocolIds})
  </select>
  <select id="duplicate" resultType="int">
    select count(id) from product_protocol 
    <where>
      <if test="name != null">
      	name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="id > 0">
        and id != #{id,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <insert id="insert" parameterType="ProductProtocol" useGeneratedKeys="true" keyProperty="id">
    insert into product_protocol
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null">
        name,
      </if>
      <if test="category >= 0">
        category,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="status >= 0">
        status
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
       <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="category >= 0">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="status >= 0">
        #{status,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="ProductProtocol" >
    update product_protocol
    <set >
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="category >= 0">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="status >= 0">
        status = #{status,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateStatus">
    update product_protocol set status=#{status,jdbcType=TINYINT} where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>